library(dplyr)
library(Seurat)
library(patchwork)
library(ggplot2)

A1_Tissue <- Load10X_Spatial(data.dir = "C:/Users/molly_iwzteu2/Onedrive/Desktop/10X/A1/outs/",
                             filename = "filtered_feature_bc_matrix.h5",
                             assay = "A1",
                             slice = "A1_Tissue",
                             filter.matrix = TRUE,
                             to.upper = FALSE,
                             image = NULL)

A1_Tissue <- SCTransform(A1_Tissue, assay = "A1", verbose = FALSE)

A1_Tissue <- NormalizeData(A1_Tissue, assay = "A1")
A1_Tissue <- FindVariableFeatures(A1_Tissue, assay = "A1")
A1_Tissue <- ScaleData(A1_Tissue, assay = "SCT")

#Clustering
A1_Tissue <- RunPCA(A1_Tissue, assay = "SCT", verbose = FALSE)
A1_Tissue <- FindNeighbors(A1_Tissue, reduction = "pca", dims = 1:30)
A1_Tissue <- FindClusters(A1_Tissue, graph.name = "SCT_snn", verbose = FALSE)
A1_Tissue <- RunUMAP(A1_Tissue, reduction = "pca", dims = 1:30)


#identification of features that correlate with special location, first method, (not preferred)
#ident.1/2 are used to specify clusters
A1_de_markers <- FindMarkers(A1_Tissue, ident.1 = 3, ident.2 = 2, min.pct = 0.25)
plotA8 <- SpatialFeaturePlot(object = A1_Tissue, features = rownames(A1_de_markers)[1:5], alpha = c(0.1, 1), ncol = 5)

png(filename = paste(new_dir, "/A1de_markers.png", sep=""), width = 1000)
plotA8
dev.off()


#Second method - First step takes a very long time(Run overnight for 1000 features)

A1_Tissue <- FindSpatiallyVariableFeatures(A1_Tissue, assay = "SCT", features = VariableFeatures(A1_Tissue)[1:1000],
                                           selection.method = "markvariogram")

# find all markers distinguishing cluster 0 from  all clusters

cluster0A.markers <- FindMarkers(A1_Tissue, ident.1 = 0, ident.2 = c(5, 1, 2, 3, 4, 6), min.pct = 0.25, logfc.threshold =.25)
head(cluster0A.markers, n = 10)
# find all markers distinguishing cluster 1 from  all clusters 
cluster1A.markers <- FindMarkers(A1_Tissue, ident.1 = 1, ident.2 = c(0, 5, 2, 3, 4, 6), min.pct = 0.25, logfc.threshold = .25)
head(cluster1A.markers, n = 10)
# find all markers distinguishing cluster 2 from all clusters
cluster2A.markers <- FindMarkers(A1_Tissue, ident.1 = 2, ident.2 = c(0, 1, 5, 3, 4, 6), min.pct = 0.25, logfc.threshold = .25)
head(cluster2A.markers, n = 10)

# find all markers distinguishing cluster 3 from  all clusters
cluster3A.markers <- FindMarkers(A1_Tissue, ident.1 = 3, ident.2 = c(0, 1, 2, 5, 4, 6), min.pct = 0.25, logfc.threshold = .25)
head(cluster3A.markers, n = 10)

# find all markers distinguishing cluster 4 from  all clusters 
cluster4A.markers <- FindMarkers(A1_Tissue, ident.1 = 4, ident.2 = c(0, 1, 2, 3, 5, 6), min.pct = 0.25, logfc.threshold = .25 )
head(cluster4A.markers, n = 10)

# find all markers distinguishing cluster 5 from  all clusters 
cluster5A.markers <- FindMarkers(A1_Tissue, ident.1 = 5, ident.2 = c(0, 1, 2, 3, 4, 6), min.pct = 0.25, logfc.threshold = .25)
head(cluster5A.markers, n = 10)

# find all markers distinguishing cluster 6 from  all clusters
cluster6A.markers <- FindMarkers(A1_Tissue, ident.1 = 6, ident.2 = c(0, 1, 2, 3, 4, 5), min.pct = 0.25, logfc.threshold = .25)
head(cluster6A.markers, n = 10)


